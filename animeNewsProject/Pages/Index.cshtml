@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<p>Total Articles: @Model.TotalArticleCount</p>
<p>Total Articles Shown on this page: @(Model.SearchResults?.Count ?? 0)</p>

<p>Auth</p>

<div class="container py-5">
    <!-- Search form -->
    <form method="get" action="@Request.Path">
        <div class="form-group">
            <input type="text" class="form-control" name="search" placeholder="Search articles">
            <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i> Search</button>
        </div>
    </form>

    <p></p>

    <div>
        <!-- Top articles of the Week -->
        <h2 class="mb-4">Top articles of the Week</h2>
        <div class="card-group">
            <div class="card-group custom-card-group">
                @foreach (var article in Model.SearchResults?.OrderByDescending(a => a.Views).Take(6) ?? new List<AnimeArticle>())
                {
                    <div class="card">
                        @if (!string.IsNullOrEmpty(article.Image))
                        {
                            <img src="@article.Image" alt="Article Image" class="card-image">
                        }
                        else
                        {
                            <img src="/images/default.png" alt="Placeholder Image" class="card-image">
                        }
                        <div class="card-content">
                            <a href="/news?id=@article.DocumentId" class="card-link">
                                <h3 class="card-title">@article.Title</h3>
                            </a>
                            <p class="card-text">
                                @if (article.Text != null)
                                {
                                    @TruncateText(article.Text, 100)
                                }
                            </p>
                            <a href="/news?id=@article.DocumentId" class="card-link">Read More</a>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Show all articles button -->
        <div class="show-all-articles">
            <a href="/articles" class="btn btn-primary">Show All Articles</a>
        </div>
    </div>

    <!-- Show latest articles -->
    <h2 class="mb-4">Latest articles released</h2>
    <div class="card-group custom-card-group">
        @foreach (var article in Model.SearchResults?.OrderByDescending(a => a.DatePublished)?.Take(3) ?? new List<AnimeArticle>())
        {
            <div class="card">
                @if (!string.IsNullOrEmpty(article.Image))
                {
                    <img src="@article.Image" alt="Article Image" class="card-image">
                }
                else
                {
                    <img src="/images/default.png" alt="Placeholder Image" class="card-image">
                }
                <div class="card-content">
                    <a href="/news?id=@article.DocumentId" class="card-link">
                        <h3 class="card-title">@article.Title</h3>
                    </a>
                    <p class="card-text">
                        @if (article.Text != null)
                        {
                            @TruncateText(article.Text, 100)
                        }
                    </p>
                    <a href="/news?id=@article.DocumentId" class="card-link">Read More</a>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="pagination">
        <!-- First page -->
        @if (Model.TotalPages > 1)
        {
            <a href="?CurrentPage=1" class="@(Model.CurrentPage == 1 ? "active" : "")">First</a>

            <!-- Previous page -->
            @if (Model.CurrentPage > 1)
            {
                <a href="?CurrentPage=@(Model.CurrentPage - 1)">Previous</a>
            }

            <!-- Page numbers -->
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (Math.Abs(Model.CurrentPage - i) <= 2 || i == 1 || i == Model.TotalPages)
                {
                    <a href="?CurrentPage=@i" class="@(Model.CurrentPage == i ? "active" : "")" style="margin: 0 5px;">@i</a>
                }
                else if (Math.Abs(Model.CurrentPage - i) == 3)
                {
                    <span class="dots">...</span>
                }
            }

            <!-- Next page -->
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <a href="?CurrentPage=@(Model.CurrentPage + 1)">Next</a>
            }
            <!-- Last page -->
            <a href="?CurrentPage=@Model.TotalPages" class="@(Model.CurrentPage == Model.TotalPages ? "active" : "")" style="margin: 0 5px;">Last</a>
        }
    </div>
</div>

@functions {
    public string TruncateText(string? text, int maxLength)
    {
        if (text != null && text.Length > maxLength)
        {
            return text.Substring(0, maxLength) + "...";
        }
        return text ?? string.Empty;
    }
}
